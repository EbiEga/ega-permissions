# This file is a template, and might need editing before it works on your project.
# This file is a template, and might need editing before it works on your project.

image: docker:latest
services:
  - docker:dind


stages:
  - build
  - package
  - deploy

maven-build:
  # This template uses jdk11 for verifying and deploying images
  image: maven:3.6.3-jdk-11
  stage: build
  before_script:
    - apt-get update
    - mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
  script:
    - mvn package -B
  artifacts:
    paths:
      - target/*.jar
  # Cache downloaded dependencies and plugins between builds.
  # To keep cache across branches add 'key: "$CI_JOB_NAME"'
  cache:
    paths:
      - .m2/repository
  variables:
    # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
    # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
    MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
    # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
    # when running from the command line.
    # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
    MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

docker-build:
  stage: package
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
    - sleep 240



